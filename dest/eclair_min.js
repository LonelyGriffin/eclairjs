var Eclair=function(t){t=t||[];var e=t.length,o=null;this.scene=new Eclair.Scene;for(var s=0;e>s;s++)"main"===t[s].name&&(o=t[s]);for(this.addModule(o||new Eclair.modules.Main),s=0;e>s;s++)"main"!==t[s].name&&this.addModule(t[s])};Eclair.prototype={addModule:function(t){function e(t){if("function"==typeof t){var e=t();o[e.prototype._type]=e,s.push(e)}else t.extendConstructors&&(o[t._type].prototype.extendConstructors||(o[t._type].prototype.extendConstructors=[]),o[t._type].prototype.extendConstructors.push(t.extendConstructors),delete t.extendConstructors),Eclair.utils.mixin(o[t._type].prototype,t)}for(var o=this,s=[],i=0;i<t.extendObjects.length;i++)e(t.extendObjects[i]);for(var n=t.components,r=0;r<n.length;r++){o.scene.addComponent(n[r]);for(var c=0;c<n[r].extendObjects.length;c++)e(n[r].extendObjects[c])}for(i=0;i<s.length;i++)if(s[i].prototype._parentType){var p=o[s[i].prototype._type],a=o[p.prototype._parentType]||o.Object;Eclair.utils.inherit(a,p)}}},Eclair.modules={},Eclair.utils={uid:function(){var t=-1,e=[];return{create:function(){return 0===e.length?(t++,t):e.pop()},"delete":function(o){var s=o>t;for(var i in e)e[i]===o&&(s=!0);s||(o===t?t--:e.push(o))}}}(),mixin:function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])},inherit:function(t,e){e=e||function(){};var o=function(){},s=e.prototype||{};return o.prototype=t.prototype,e.prototype=new o,Eclair.utils.mixin(e.prototype,s),e.prototype.constructor=e,e.prototype.superclass=t.prototype,e}},Eclair.Component=function(t){this.name=t.name||"component",this.type=t.type||"standard",this.priority=t.priority||1e3,this.extendObjects=t.extendObjects||[],this.processedObjectTypes=t.processedObjectTypes||[],t.processed&&(this.processed=t.processed),this.objects=[]},Eclair.Component.prototype={addObject:function(t){for(var e=this.processedObjectTypes.length,o=0;e>o;o++)if(t.is(this.processedObjectTypes[o]))return this.objects.push(t),!0;return!1},processed:function(){}},Eclair.Debugger=function(t,e){this.canvas=document.getElementById(t),this.context=this.canvas.getContext("2d"),this.scene=e},Eclair.Debugger.prototype={scale:20,start:function(t){this.scene.start(this.drawObjects,t,this)},stop:function(){this.scene.stop()},drawObjects:function(t){this.context.clearRect(0,0,this.canvas.width,this.canvas.height);for(var e=0;e<t.length;e++)this[t[e]._type]&&this[t[e]._type](t[e])},Point:function(t){this.context.beginPath(),this.context.arc(t.positionX*this.scale,t.positionY*this.scale,2,0,2*Math.PI,!1),this.context.lineWidth=1,this.context.stroke()},Polygon:function(t){var e=t.vertices.length;if(e>0){this.context.beginPath(),this.context.moveTo(t.vertices[e-1].x*this.scale,t.vertices[e-1].y*this.scale);for(var o=0;e>o;o++)this.context.lineTo(t.vertices[o].x*this.scale,t.vertices[o].y*this.scale);this.context.lineWidth=1,this.context.stroke()}},RodJoint:function(t){this.context.beginPath(),this.context.moveTo(t.object1.positionX*this.scale,t.object1.positionY*this.scale),this.context.lineTo(t.object2.positionX*this.scale,t.object2.positionY*this.scale),this.context.lineWidth=1,this.context.stroke()}},Eclair.Module=function(t){for(var e in t);},Eclair.Module.prototype={name:"module",extendObjects:null,components:null,addComponent:function(t){this.components=this.components||[],this.components.push(t)},addExtendObjects:function(t){this.extendObjects=this.extendObjects||[],this.extendObjects.push(t)}},Eclair.Scene=function(){this._objects=[],this._standardComponents=[],this._solverComponents=[],this._time=null,this._isProcessed=!1},Eclair.Scene.prototype={addObject:function(t){if(t){for(var e=0;e<this._standardComponents.length;e++)this._standardComponents[e].addObject(t);this._objects.push(t)}},addJoint:function(t){for(var e=0;e<this._solverComponents.length;e++)this._solverComponents[e].addObject(t);this._objects.push(t)},addComponent:function(t){var e=0;if("standard"===t.type){for(var o=0;o<this._standardComponents.length;o++)if(t.priority>=this._standardComponents[o].priority){e=o;break}this._standardComponents.splice(e,0,t)}"solver"===t.type&&this._solverComponents.push(t)},start:function(t,e,o){this._isProcessed=!0;var s=this,i=setInterval(function(){if(s._isProcessed){if(s._time){var n=new Date;s.nextStep(e),s._time=n}else s._time=new Date;t.call(o,s._objects)}else clearInterval(i)},e)},stop:function(){this._isProcessed=!1},nextStep:function(t){for(var e=this._standardComponents.length,o=0;e>o;o++)this._standardComponents[o].processed(t/1e3);for(var s=0;30>s;s++)for(o=0;o<this._solverComponents.length;o++)this._solverComponents[o].processed(t/1e3);return this._objects},nextState:function(){}},Eclair.modules.Main=function(t){this.superclass.constructor.call(this,t)},Eclair.modules.Main.prototype={name:"Main"},Eclair.utils.inherit(Eclair.Module,Eclair.modules.Main),Eclair.modules.Main.prototype.addExtendObjects(function(){var t=function(t){for(var e=0;e<this.extendConstructors.length;e++)this.extendConstructors[e].call(this,t);Eclair.utils.mixin(this,t),this._uid=Eclair.utils.uid.create(),this._prevState={}};return t.prototype={_type:"Object",_parentType:null,superclass:null,is:function(t){if("string"==typeof t)for(var e=this;e.superclass;){if(e._type===t)return!0;e=e.superclass}return!1},extendConstructors:[]},t.prototype.constructor=t,t}),Eclair.modules.Main.prototype.addExtendObjects(function(){var t=function(e){t.prototype.superclass.constructor.call(this,e),this.positionX=e.positionX||0,this.positionY=e.positionY||0,this._prevState.positionX=this.positionX,this._prevState.positionY=this.positionY};return t.prototype={_type:"Point",_parentType:"Object"},t}),Eclair.modules.Main.prototype.addExtendObjects(function(){var t=function(e){t.prototype.superclass.constructor.call(this,e),this.normalizeVertices=e.vertices||[],this.vertices=[];for(var o=0;o<this.normalizeVertices.length;o++)this.vertices.push({x:this.normalizeVertices[o].x+this.positionX,y:this.normalizeVertices[o].y+this.positionY})};return t.prototype={_type:"Polygon",_parentType:"Point"},t}),Eclair.modules.Main.prototype.addComponent(new Eclair.Component({name:"RodJoint",type:"solver",extendObjects:[function(){var t=function(t){if(this.object1=t.object1,this.object2=t.object2,!this.object1||!this.object2)throw"Eclair RodJoint: object1 or object2 not found";var e=this.object1.positionX-this.object2.positionX,o=this.object1.positionY-this.object2.positionY;this.constLength=Math.sqrt(e*e+o*o),this._k=.5,(this.object1["static"]||this.object2["static"])&&(this._k=1)};return t.prototype={_type:"RodJoint",_parentType:"Object"},t}],processedObjectTypes:["RodJoint"],processed:function(){for(var t=0;t<this.objects.length;t++){var e=this.objects[t],o=e.object2.positionX-e.object1.positionX,s=e.object2.positionY-e.object1.positionY,i=Math.sqrt(o*o+s*s);if(Math.abs(i-e.constLength)>0){var n=(i-e.constLength)*e._k,r=o/i,c=s/i;e.object1["static"]||(e.object1.positionX+=n*r,e.object1.positionY+=n*c),e.object2["static"]||(e.object2.positionX-=n*r,e.object2.positionY-=n*c)}}}})),Eclair.modules.Main.prototype.addComponent(new Eclair.Component({name:"SpringJoint",type:"solver",extendObjects:[function(){var t=function(t){if(this.object1=t.object1,this.object2=t.object2,this.k=t.k||1,!this.object1||!this.object2)throw"Eclair SpringJoint: object1 or object2 not found";if(t.length)this.constLength=t.length;else{var e=this.object1.positionX-this.object2.positionX,o=this.object1.positionY-this.object2.positionY;this.constLength=Math.sqrt(e*e+o*o)}};return t.prototype={_type:"SpringJoint",_parentType:"Object"},t}],processedObjectTypes:["SpringJoint"],processed:function(){for(var t=0;t<this.objects.length;t++){var e=this.objects[t],o=e.object2.positionX-e.object1.positionX,s=e.object2.positionY-e.object1.positionY,i=Math.sqrt(o*o+s*s);if(Math.abs(i-e.constLength)>0){var n=i-e.constLength,r=o/i,c=s/i;e.object1["static"]||(e.object1.forceX+=n*r*e.k,e.object1.forceY+=n*c*e.k),e.object2["static"]||(e.object2.forceX-=n*r*e.k,e.object2.forceY-=n*c*e.k)}}}})),Eclair.modules.Main.prototype.addComponent(new Eclair.Component({name:"TranslationMotion",type:"standard",priority:1e5,extendObjects:[{_type:"Point",mass:1,forceX:0,forceY:0,startForceX:0,startForceY:0,"static":!1,moveTo:function(t,e){this.positionX=t,this.positionY=e},extendConstructors:function(){}},{_type:"Polygon",moveTo:function(t,e){this.positionX=t,this.positionY=e;for(var o=0;o<this.vertices.length;o++)this.vertices[o].x=this.normalizeVertices[o].x+t,this.vertices[o].y=this.normalizeVertices[o].y+e}}],processedObjectTypes:["Point"],processed:function(t){for(var e=0;e<this.objects.length;e++){var o=this.objects[e];if(!o["static"]){var s=o.forceX+o.startForceX,i=o.forceY+o.startForceY,n=t*t,r=2*o.positionX-o._prevState.positionX+s*n/o.mass,c=2*o.positionY-o._prevState.positionY+i*n/o.mass;o._prevState.positionX=o.positionX,o._prevState.positionY=o.positionY,o.moveTo(r,c),o.startForceY=0,o.startForceX=0}}}})),Eclair.modules.Main.prototype.addComponent(new Eclair.Component({name:"SpringJoint",type:"standard",extendObjects:[{_type:"Polygon",getNormals:function(){for(var t=[],e=this.vertices.length,o=this.vertices[e-1],s=0;e>s;s++){var i=o.x-this.vertices[s].x,n=this.vertices[s].y-o.y,r=Math.sqrt(i*i+n*n);t.push({x:n/r,y:i/r}),o=this.vertices[s]}return t},getProjection:function(t){function e(t,e){for(var o=Number.MAX_VALUE,s=-Number.MAX_VALUE,i=[{},{}],n=t.length,r=0;n>r;r++)t[r][e]<o&&(i[0]=t[r],o=t[r][e]),t[r][e]>s&&(i[1]=t[r],s=t[r][e]);return i}for(var o=this.vertices.length,s=[],i=0;o>i;i++){var n=this.vertices[i].x*t.x+this.vertices[i].y*t.y;s.push({x:n*t.x,y:n*t.y})}var r=e(s,"x");return r[0].x==r[1].x&&(r=e(s,"y")),r}}],processedObjectTypes:["Polygon"],processed:function(){for(var t=0;t<this.objects.length-1;t++)for(var e=t+1;e<this.objects.length;e++){for(var o,s,i=this.objects[t],n=this.objects[e],r=i.getNormals().concat(n.getNormals()),c=!0,p=Number.MAX_VALUE,a=0;a<r.length;a++){var h=i.getProjection(r[a]),l=n.getProjection(r[a]),d=!1,u=0===r[a].x?"y":"x";if(h[0][u]<=l[0][u]&&h[1][u]>=l[0][u]&&(d=h[1][u]-l[0][u]),l[0][u]<=h[0][u]&&l[1][u]>=h[0][u]&&(d=l[1][u]-h[0][u]),!d){c=!1;break}p>d&&(p=d,o=[h,l],s=u)}if(c){var f,b;f=o[0][0].x<o[1][0].x?o[0][1].x-o[1][0].x:o[1][0].x-o[0][1].x,b=o[0][0].y<o[1][0].y?o[0][1].y-o[1][0].y:o[1][0].y-o[0][1].y,i.positionY-=b/2,n.positionY+=b/2,i.positionX-=f/2,n.positionX+=f/2}}}}));